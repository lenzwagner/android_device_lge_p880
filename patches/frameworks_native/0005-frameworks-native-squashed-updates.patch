From 50f8b0b53b60ed207975c54b130b922947c8bc3c Mon Sep 17 00:00:00 2001
From: guest <guest@usa.net>
Date: Thu, 12 Nov 2015 15:21:18 -0800
Subject: [PATCH] frameworks/native: squashed updates

---
 include/gui/Surface.h               |  2 ++
 include/gui/SurfaceComposerClient.h |  4 ++++
 libs/gui/Surface.cpp                | 16 +++++++++++-----
 libs/gui/SurfaceComposerClient.cpp  |  9 +++++++++
 4 files changed, 26 insertions(+), 5 deletions(-)

diff --git a/include/gui/Surface.h b/include/gui/Surface.h
index 72f1067..d431fbd 100644
--- a/include/gui/Surface.h
+++ b/include/gui/Surface.h
@@ -314,6 +314,8 @@ private:
     // (the change since the previous frame) passed in by the producer.
     Region mDirtyRegion;
 
+    bool mDequeuedOnce;
+
     // Stores the current generation number. See setGenerationNumber and
     // IGraphicBufferProducer::setGenerationNumber for more information.
     uint32_t mGenerationNumber;
diff --git a/include/gui/SurfaceComposerClient.h b/include/gui/SurfaceComposerClient.h
index 0b7da1b..4762fd1 100644
--- a/include/gui/SurfaceComposerClient.h
+++ b/include/gui/SurfaceComposerClient.h
@@ -88,6 +88,10 @@ public:
     static ssize_t getDisplayWidth(int32_t displayId);
     static ssize_t getDisplayHeight(int32_t displayId);
     static ssize_t getDisplayOrientation(int32_t displayId);
+    // TODO: Remove me. Do not use.
+    // This is a compatibility shim for one product whose drivers are depending on
+    // this legacy function (when they shouldn't).
+    static status_t getDisplayInfo(int32_t displayId, DisplayInfo* info);
 
     // ------------------------------------------------------------------------
     // surface creation / destruction
diff --git a/libs/gui/Surface.cpp b/libs/gui/Surface.cpp
index 4b76f98..68795e8 100644
--- a/libs/gui/Surface.cpp
+++ b/libs/gui/Surface.cpp
@@ -80,6 +80,7 @@ Surface::Surface(
     mConnectedToCpu = false;
     mProducerControlledByApp = controlledByApp;
     mSwapIntervalZero = false;
+    mDequeuedOnce = false;
 }
 
 Surface::~Surface() {
@@ -270,6 +271,7 @@ int Surface::dequeueBuffer(android_native_buffer_t** buffer, int* fenceFd) {
     }
 
     *buffer = gbuf.get();
+    if (!mDequeuedOnce) mDequeuedOnce = true;
     return OK;
 }
 
@@ -441,12 +443,16 @@ int Surface::query(int what, int* value) const {
                 }
                 break;
             case NATIVE_WINDOW_QUEUES_TO_WINDOW_COMPOSER: {
-                sp<ISurfaceComposer> composer(
-                        ComposerService::getComposerService());
-                if (composer->authenticateSurfaceTexture(mGraphicBufferProducer)) {
-                    *value = 1;
-                } else {
+                if (!mDequeuedOnce) {
                     *value = 0;
+                } else {
+                    sp<ISurfaceComposer> composer(
+                            ComposerService::getComposerService());
+                    if (composer->authenticateSurfaceTexture(mGraphicBufferProducer)) {
+                        *value = 1;
+                    } else {
+                        *value = 0;
+                    }
                 }
                 return NO_ERROR;
             }
diff --git a/libs/gui/SurfaceComposerClient.cpp b/libs/gui/SurfaceComposerClient.cpp
index fb776ed..5a049dd 100644
--- a/libs/gui/SurfaceComposerClient.cpp
+++ b/libs/gui/SurfaceComposerClient.cpp
@@ -736,6 +736,15 @@ ssize_t SurfaceComposerClient::getDisplayOrientation(int32_t displayId) {
     return info.orientation;
 }
 
+// TODO: Remove me. Do not use.
+// This is a compatibility shim for one product whose drivers are depending on
+// this legacy function (when they shouldn't).
+status_t SurfaceComposerClient::getDisplayInfo(
+        int32_t displayId, DisplayInfo* info)
+{
+    return getDisplayInfo(getBuiltInDisplay(displayId), info);
+}
+
 // ----------------------------------------------------------------------------
 
 status_t ScreenshotClient::capture(
-- 
1.9.1

